{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","getUser","startTodoLoading","className","map","todo","id","completed","classNames","title","type","onClick","buttonHandler","TodoFilter","selectHandler","searchHandler","searchHandlerReset","useState","input","setInput","onChange","value","placeholder","event","target","length","style","pointerEvents","Loader","TodoModal","todoLoading","selectedTodo","closeSelectedTodo","href","user","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","App","todosFromServer","setTodosFromServer","filteredTodosFromServer","setFilteredTodosFromServer","loadingFromServer","setLoadingFromServer","setSelectedTodo","setTodoLoading","selectFiltration","setSelectFiltration","inputFiltration","setInputFiltration","getSelectedUser","selectedTodoInfo","a","userId","uploadedUser","newTodo","promise","useEffect","getTodosFromServer","select","filter","includes","filtrationHandler","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0b688dd.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[]\n  getUser: (selectedTodoInfo:Todo) => void\n  startTodoLoading: () => void\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  getUser,\n  startTodoLoading,\n}) => {\n  const buttonHandler = (todo: Todo) => {\n    startTodoLoading();\n    getUser(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                { 'has-text-success': todo.completed },\n                { 'has-text-danger': !todo.completed },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  buttonHandler(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState } from 'react';\n\ntype Props = {\n  selectHandler: (event: React.ChangeEvent<HTMLSelectElement>) => void\n  searchHandler: (event: React.ChangeEvent<HTMLInputElement>) => void\n  searchHandlerReset: () => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  selectHandler,\n  searchHandler,\n  searchHandlerReset,\n}) => {\n  const [input, setInput] = useState('');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={selectHandler}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={input}\n          onChange={(event) => {\n            searchHandler(event);\n            setInput(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {input.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                searchHandlerReset();\n                setInput('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  todoLoading: boolean\n  selectedTodo: Todo | null\n  closeSelectedTodo: () => void\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  todoLoading,\n  selectedTodo,\n  closeSelectedTodo,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {todoLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeSelectedTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className=\"has-text-danger\">Planned</strong>\n\n              {' by '}\n\n              <a href={selectedTodo?.user?.email}>\n                {selectedTodo?.user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [filteredTodosFromServer, setFilteredTodosFromServer] = useState<Todo[]>([]);\n  const [loadingFromServer, setLoadingFromServer] = useState(true);\n\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const [todoLoading, setTodoLoading] = useState(false);\n\n  const [selectFiltration, setSelectFiltration] = useState('');\n  const [inputFiltration, setInputFiltration] = useState('');\n\n  const filtrationHandler = (select: string, input: string) => {\n    let todos = todosFromServer;\n\n    switch (select) {\n      case 'active':\n        todos = todos.filter(todo => !todo.completed);\n        break;\n      case 'completed':\n        todos = todos.filter(todo => todo.completed);\n        break;\n      default:\n        todos = todosFromServer;\n        break;\n    }\n\n    setFilteredTodosFromServer(todos.filter(todo => todo.title.includes(input)));\n  };\n\n  const searchHandlerReset = () => {\n    setInputFiltration('');\n  };\n\n  const searchHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputFiltration(event.target.value);\n  };\n\n  const selectHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectFiltration(event.target.value);\n  };\n\n  const startTodoLoading = () => {\n    setTodoLoading(true);\n  };\n\n  const closeSelectedTodo = () => {\n    setSelectedTodo(null);\n  };\n\n  const getSelectedUser = async (selectedTodoInfo:Todo) => {\n    const uploadedUser = await getUser(selectedTodoInfo.userId);\n    const newTodo = {\n      ...selectedTodoInfo,\n      user: uploadedUser,\n    };\n\n    setSelectedTodo(newTodo);\n    setTodoLoading(false);\n  };\n\n  async function getTodosFromServer() {\n    const promise = await getTodos();\n\n    setTodosFromServer(promise);\n    setFilteredTodosFromServer(promise);\n    setLoadingFromServer(false);\n  }\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  useEffect(() => {\n    filtrationHandler(selectFiltration, inputFiltration);\n  }, [selectFiltration, inputFiltration]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectHandler={selectHandler}\n                searchHandler={searchHandler}\n                searchHandlerReset={searchHandlerReset}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loadingFromServer && (\n                <Loader />\n              )}\n              {todosFromServer.length > 0 && (\n                <TodoList\n                  todos={filteredTodosFromServer}\n                  getUser={getSelectedUser}\n                  startTodoLoading={startTodoLoading}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {(selectedTodo !== null || todoLoading) && (\n        <TodoModal\n          todoLoading={todoLoading}\n          selectedTodo={selectedTodo}\n          closeSelectedTodo={closeSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}